@page "/"

@using Election.Data
@using Microsoft.CodeAnalysis.Elfie.Extensions
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<PageTitle>Home</PageTitle>

<h1>Welcome to the Election App!</h1>

@if (nominees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        @foreach (var nominee in nominees)
        {
            <div class="col-sm-4 mb-4">
                <div class="card @GetCardClass(nominee.Id)" @onclick="() => SelectNominee(nominee)">
                    @* <img src="data:image/jpeg;base64,@Convert.ToBase64String(nominee.Image)" class="card-img-top" alt="@nominee.FirstName @nominee.LastName"> *@
                    <div class="card-body">
                        <h5 class="card-title">@nominee.FirstName @nominee.LastName</h5>
                        <p class="card-text">Phone: @nominee.PhoneNumber</p>
                        <p class="card-text">Email: @nominee.EmailAddress</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="mt-3">
        <button class="btn btn-primary" @onclick="SubmitVote" disabled="@(selectedNominee == null)">Submit Vote</button>
    </div>
}

@code {
    private List<Nominee> nominees;
    private Nominee selectedNominee;

    protected override async Task OnInitializedAsync()
    {
        nominees = await DbContext.Nominees.ToListAsync();
    }

    private void SelectNominee(Nominee nominee)
    {
        selectedNominee = nominee;
    }

    private async Task SubmitVote()
    {
        if (selectedNominee == null)
            return;

        // Assuming there is a logged-in user
        var elector = await DbContext.Electors.FirstOrDefaultAsync();
        if (elector != null)
        {
            elector.ElectedNominee = selectedNominee.Id.ToString();
            await DbContext.SaveChangesAsync();
            Navigation.NavigateTo("/"); // Redirect after submission (adjust as necessary)
        }
    }

    private string GetCardClass(int nomineeId)
    {
        return nomineeId == selectedNominee?.Id ? "border-primary shadow selected" : "shadow";
    }

}